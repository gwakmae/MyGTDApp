<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <base href="/" />

    @* [수정] 로컬 파일 대신 안정적인 CDN을 사용하도록 변경합니다. *@
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">

    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="MyGtdApp.styles.css" />
    <link rel="icon" type="image/png" href="favicon.png" />
    <HeadOutlet @rendermode="InteractiveServer" />
</head>

<body>
    <Router AppAssembly="typeof(Program).Assembly">
        <Found Context="routeData">
            <RouteView RouteData="routeData"
                       DefaultLayout="typeof(Layout.MainLayout)" />
            <FocusOnNavigate RouteData="routeData" Selector="h1" />
        </Found>
    </Router>

    <script src="_framework/blazor.web.js" autostart="false"></script>
    <script>
        Blazor.start({
            reconnectionOptions: {
                maxRetries: 50,
                retryIntervalMilliseconds: 2000
            },
            configureSignalR: function (builder) {
                builder.withServerTimeout(120000)
                       .withKeepAliveInterval(30000);
            }
        }).then(() => {
            let reconnectDelayTimer = null;

            // ✅ 안전한 접근으로 수정
            if (Blazor.defaultReconnectionHandler && Blazor.defaultReconnectionHandler._reconnectionDisplay) {
                // 재연결 UI 지연 표시
                const originalShow = Blazor.defaultReconnectionHandler._reconnectionDisplay.show;
                Blazor.defaultReconnectionHandler._reconnectionDisplay.show = function() {
                    reconnectDelayTimer = setTimeout(() => {
                        if (originalShow) originalShow.call(this);
                    }, 5000); // 5초 지연
                };

                // 재연결 성공 시 타이머 취소
                const originalHide = Blazor.defaultReconnectionHandler._reconnectionDisplay.hide;
                Blazor.defaultReconnectionHandler._reconnectionDisplay.hide = function() {
                    if (reconnectDelayTimer) {
                        clearTimeout(reconnectDelayTimer);
                        reconnectDelayTimer = null;
                    }
                    if (originalHide) originalHide.call(this);
                };
            }

            // 최종 실패 시 자동 새로고침
            if (Blazor.defaultReconnectionHandler) {
                Blazor.defaultReconnectionHandler._reconnectCallback = function (d) {
                    document.location.reload();
                };
            }
        }).catch(error => {
            console.error('Blazor 시작 실패:', error);
        });

        // 탭 활성화 시 연결 확인
        document.addEventListener('visibilitychange', function() {
            if (!document.hidden &&
                Blazor.defaultReconnectionHandler &&
                Blazor.defaultReconnectionHandler._currentReconnectionProcess) {
                setTimeout(() => {
                    document.location.reload();
                }, 2000);
            }
        });
    </script>

    <script src="js/download-helper.js"></script>
    <script src="js/modal-utils.js"></script>

</body>

</html>